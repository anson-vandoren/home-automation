# Code generated by font-to-py.py.
# Font: Abel-Regular.ttf Char set: %0123456789EFHRSTÂ°
version = '0.26'

def height():
    return 11

def max_width():
    return 11

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 37

def max_ch():
    return 176

_font =\
b'\x07\x00\x78\x88\x84\x08\x08\x30\x20\x20\x00\x00\x20\x0b\x00\xe1'\
b'\x00\xa2\x00\xa2\x00\xa4\x00\xe8\x00\x09\x00\x12\x80\x12\x80\x22'\
b'\x80\x22\x80\x43\x00\x08\x00\x78\x84\x84\x84\x84\x84\x84\x84\x84'\
b'\xc4\x78\x08\x00\x70\x90\x10\x10\x10\x10\x10\x10\x10\x10\xfe\x08'\
b'\x00\x78\x84\x84\x04\x08\x08\x10\x30\x20\xc0\xfc\x08\x00\x78\x84'\
b'\x84\x04\x08\x18\x04\x04\x84\xc4\x78\x08\x00\x04\x0c\x0c\x14\x14'\
b'\x24\x24\x44\xfe\x04\x04\x08\x00\x7c\x40\xc0\x90\xe8\x84\x04\x04'\
b'\x84\xc4\x78\x08\x00\x7c\xc4\x84\x80\xb8\xcc\x84\x84\x84\x44\x78'\
b'\x08\x00\xfc\x84\x0c\x08\x08\x10\x10\x20\x20\x20\x40\x08\x00\x78'\
b'\x84\x84\x84\x4c\x78\x84\x84\x84\xc4\x78\x08\x00\x7c\xc4\x84\x84'\
b'\x84\x6c\x14\x04\x84\x44\x78\x08\x00\xfe\x80\x80\x80\x80\xfc\x80'\
b'\x80\x80\x80\xfe\x08\x00\xfe\x80\x80\x80\x80\xfc\x80\x80\x80\x80'\
b'\x80\x09\x00\x82\x00\x82\x00\x82\x00\x82\x00\x82\x00\xfe\x00\x82'\
b'\x00\x82\x00\x82\x00\x82\x00\x82\x00\x08\x00\xfc\x84\x84\x84\x84'\
b'\xfc\x90\x90\x88\x84\x86\x08\x00\x7c\x84\x84\x80\x60\x38\x04\x04'\
b'\x84\x84\x78\x07\x00\xfe\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'\
b'\x07\x00\x70\x88\x90\x70\x00\x00\x00\x00\x00\x00\x00'

_index =\
b'\x00\x00\x0d\x00\x0d\x00\x25\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x25\x00\x32\x00\x32\x00\x3f\x00\x3f\x00\x4c\x00\x4c\x00\x59\x00'\
b'\x59\x00\x66\x00\x66\x00\x73\x00\x73\x00\x80\x00\x80\x00\x8d\x00'\
b'\x8d\x00\x9a\x00\x9a\x00\xa7\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\xa7\x00\xb4\x00\xb4\x00\xc1\x00\x00\x00\x0d\x00'\
b'\xc1\x00\xd9\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\xd9\x00\xe6\x00\xe6\x00\xf3\x00'\
b'\xf3\x00\x00\x01\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00\x00\x00\x0d\x00'\
b'\x00\x01\x0d\x01'

_mvfont = memoryview(_font)

def get_ch(ch):
    ordch = ord(ch)
    ordch = ordch + 1 if ordch >= 37 and ordch <= 176 else 63
    idx_offs = 4 * (ordch - 37)
    offset = int.from_bytes(_index[idx_offs : idx_offs + 2], 'little')
    next_offs = int.from_bytes(_index[idx_offs + 2 : idx_offs + 4], 'little')
    width = int.from_bytes(_font[offset:offset + 2], 'little')
    return _mvfont[offset + 2:next_offs], 11, width
 
